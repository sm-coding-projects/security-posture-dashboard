# =============================================================================
# SECURITY POSTURE DASHBOARD - ENVIRONMENT CONFIGURATION EXAMPLE
# =============================================================================
# This file shows the structure of environment variables needed for the app.
# Copy this file to .env.local and fill in your actual values.
# DO NOT put real credentials in this file - it's committed to version control.

# =============================================================================
# DATABASE CONFIGURATION (Neon PostgreSQL)
# =============================================================================
# Get these from your Neon dashboard: https://console.neon.tech/
# 1. Create a new project in Neon
# 2. Go to Dashboard > Connection Details
# 3. Copy both pooled and direct connection strings

# Pooled connection (recommended for serverless functions and queries)
DATABASE_URL_POOLED=""

# Direct connection (for migrations and admin tasks)
DATABASE_URL=""

# =============================================================================
# AUTHENTICATION CONFIGURATION (NextAuth.js)
# =============================================================================
# NextAuth secret - generate a random string for production
# You can generate one using: openssl rand -base64 32
NEXTAUTH_SECRET=""

# Application URL - update for your deployment environment
NEXTAUTH_URL=""

# =============================================================================
# GITHUB OAUTH CONFIGURATION
# =============================================================================
# Create a GitHub OAuth App:
# 1. Go to GitHub Settings > Developer settings > OAuth Apps
# 2. Click "New OAuth App"
# 3. Set Authorization callback URL to: http://localhost:3000/api/auth/callback/github
# 4. Copy Client ID and generate a Client Secret

GITHUB_CLIENT_ID=""
GITHUB_CLIENT_SECRET=""

# =============================================================================
# EXTERNAL SECURITY API KEYS
# =============================================================================

# Shodan API Key
# Get from: https://account.shodan.io/
# 1. Create account on Shodan
# 2. Go to Account > API Keys
# 3. Copy your API key
SHODAN_API_KEY=""

# VirusTotal API Key
# Get from: https://www.virustotal.com/gui/my-apikey
# 1. Create account on VirusTotal
# 2. Go to Profile > API Key
# 3. Copy your API key (free tier available)
VIRUSTOTAL_API_KEY=""

# SecurityTrails API Key
# Get from: https://securitytrails.com/corp/api
# 1. Create account on SecurityTrails
# 2. Go to Account > API
# 3. Copy your API key (free tier available)
SECURITYTRAILS_API_KEY=""

# =============================================================================
# EMAIL CONFIGURATION (Resend)
# =============================================================================
# Get from: https://resend.com/
# 1. Create account on Resend
# 2. Go to API Keys section
# 3. Create a new API key
# 4. Verify your domain or use their sandbox domain for testing

RESEND_API_KEY=""
FROM_EMAIL=""

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Public URL of your application (used for webhooks, emails, etc.)
# For local development, use localhost
# For production, use your actual domain
PUBLIC_APP_URL=""

# Environment identifier
NODE_ENV=""

# =============================================================================
# OPTIONAL: ADDITIONAL SECURITY CONFIGURATIONS
# =============================================================================

# Rate limiting configuration (requests per minute)
RATE_LIMIT_RPM=""

# Session timeout (in seconds)
SESSION_TIMEOUT=""

# Enable debug logging (true/false)
DEBUG_LOGGING=""